name: Go

on:
  workflow_dispatch:
  push:
    tags:
      - v*
  
jobs:
  build:
    strategy:
      matrix:
        binary: [dtls-decrypter, dtls-encrypter]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Get deps
      run: go mod download

    - name: Build
      run: go build ./cmd/${{ matrix.binary }}/main.go
      

    - name: Upload build ${{ matrix.os }}/${{ matrix.binary }}
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.binary }}-${{ matrix.os }}
        path: ./main

  create_release:
    runs-on: ubuntu-latest
    needs: build
    outputs:
          output1: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  upload_release:
      strategy:
        matrix:
          binary: [dtls-decrypter, dtls-encrypter]
          os: [ubuntu-latest, macos-latest]
      runs-on: ubuntu-latest
      needs: create_release
      steps:
        - name: Download Artifact ${{ matrix.binary }}-${{ matrix.os }}
          uses: actions/download-artifact@v2
          with:
            name: ${{ matrix.binary }}-${{ matrix.os }}
            path: ${{ matrix.binary }}-${{ matrix.os }}
        - name: Create ${{ matrix.binary }}-${{ matrix.os }}.tar.gz
          run: tar zcvf ${{ matrix.binary }}-${{ matrix.os }}.tar.gz ${{ matrix.binary }}-${{ matrix.os }}
        - name: Upload Release Asset $${{ matrix.binary }}-${{ matrix.os }}
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.create_release.outputs.output1 }}
            asset_path: ./${{ matrix.binary }}-${{ matrix.os }}.tar.gz
            asset_name: ${{ matrix.binary }}-${{ matrix.os }}.tar.gz
            asset_content_type: application/gzip
